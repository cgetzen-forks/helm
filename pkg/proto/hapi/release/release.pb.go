// Code generated by protoc-gen-go. DO NOT EDIT.
// source: hapi/release/release.proto

package release

import (
	fmt "fmt"

	proto "github.com/golang/protobuf/proto"

	math "math"

	hapi_chart "k8s.io/helm/pkg/proto/hapi/chart"
	hapi_chart3 "k8s.io/helm/pkg/proto/hapi/chart"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// Release describes a deployment of a chart, together with the chart
// and the variables used to deploy that chart.
type Release struct {
	// Name is the name of the release
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// Info provides information about a release
	Info *Info `protobuf:"bytes,2,opt,name=info" json:"info,omitempty"`
	// Chart is the chart that was released.
	Chart *hapi_chart3.Chart `protobuf:"bytes,3,opt,name=chart" json:"chart,omitempty"`
	// Config is the set of extra Values added to the chart.
	// These values override the default values inside of the chart.
	Config *hapi_chart.Config `protobuf:"bytes,4,opt,name=config" json:"config,omitempty"`
	// Manifest is the string representation of the rendered template.
	Manifest string `protobuf:"bytes,5,opt,name=manifest" json:"manifest,omitempty"`
	// Hooks are all of the hooks declared for this release.
	Hooks []*Hook `protobuf:"bytes,6,rep,name=hooks" json:"hooks,omitempty"`
	// Version is an int32 which represents the version of the release.
	Version int32 `protobuf:"varint,7,opt,name=version" json:"version,omitempty"`
	// Namespace is the kubernetes namespace of the release.
	Namespace string `protobuf:"bytes,8,opt,name=namespace" json:"namespace,omitempty"`
	// Seed is the kubernetes namespace of the release.
	Seed int32 `protobuf:"varint,9,opt,name=seed,proto3" json:"seed,omitempty"`
}

func (m *Release) Reset()                    { *m = Release{} }
func (m *Release) String() string            { return proto.CompactTextString(m) }
func (*Release) ProtoMessage()               {}
func (*Release) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

func (m *Release) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Release) GetInfo() *Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (m *Release) GetChart() *hapi_chart3.Chart {
	if m != nil {
		return m.Chart
	}
	return nil
}

func (m *Release) GetConfig() *hapi_chart.Config {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *Release) GetManifest() string {
	if m != nil {
		return m.Manifest
	}
	return ""
}

func (m *Release) GetHooks() []*Hook {
	if m != nil {
		return m.Hooks
	}
	return nil
}

func (m *Release) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Release) GetNamespace() string {
	if m != nil {
		return m.Namespace
	}
	return ""
}

func (m *Release) GetSeed() int32 {
	if m != nil {
		return m.Seed
	}
	return 0
}

func init() {
	proto.RegisterType((*Release)(nil), "hapi.release.Release")
}

func init() { proto.RegisterFile("hapi/release/release.proto", fileDescriptor2) }

var fileDescriptor2 = []byte{
	// 266 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xbf, 0x4e, 0xc4, 0x30,
	0x0c, 0xc6, 0xd5, 0xbb, 0xfe, 0xb9, 0x1a, 0x16, 0x3c, 0x80, 0x55, 0x31, 0x54, 0x0c, 0x50, 0x31,
	0xf4, 0x24, 0x78, 0x03, 0x58, 0x60, 0xcd, 0xc8, 0x16, 0x4a, 0x4a, 0xab, 0xe3, 0xe2, 0xaa, 0xa9,
	0x78, 0x2a, 0x1e, 0x12, 0xc5, 0xe9, 0x41, 0x0f, 0x96, 0x34, 0xf6, 0xef, 0xeb, 0xe7, 0x2f, 0x86,
	0xa2, 0xd3, 0x43, 0xbf, 0x1d, 0xcd, 0x87, 0xd1, 0xce, 0x1c, 0xbe, 0xf5, 0x30, 0xf2, 0xc4, 0x78,
	0xea, 0x59, 0x3d, 0xf7, 0x8a, 0x8b, 0x23, 0x65, 0xc7, 0xbc, 0x0b, 0xb2, 0x3f, 0xa0, 0xb7, 0x2d,
	0x1f, 0x81, 0xa6, 0xd3, 0xe3, 0xb4, 0x6d, 0xd8, 0xb6, 0xfd, 0xfb, 0x0c, 0xce, 0x97, 0xc0, 0x9f,
	0xa1, 0x7f, 0xf5, 0xb5, 0x82, 0x4c, 0x05, 0x1f, 0x44, 0x88, 0xad, 0xde, 0x1b, 0x8a, 0xca, 0xa8,
	0xca, 0x95, 0xdc, 0xf1, 0x1a, 0x62, 0x6f, 0x4f, 0xab, 0x32, 0xaa, 0x4e, 0xee, 0xb0, 0x5e, 0xe6,
	0xab, 0x9f, 0x6d, 0xcb, 0x4a, 0x38, 0xde, 0x40, 0x22, 0xb6, 0xb4, 0x16, 0xe1, 0x59, 0x10, 0x86,
	0x49, 0x8f, 0xfe, 0x54, 0x81, 0xe3, 0x2d, 0xa4, 0x21, 0x18, 0xc5, 0x4b, 0xcb, 0x59, 0x29, 0x44,
	0xcd, 0x0a, 0x2c, 0x60, 0xb3, 0xd7, 0xb6, 0x6f, 0x8d, 0x9b, 0x28, 0x91, 0x50, 0x3f, 0x35, 0x56,
	0x90, 0xf8, 0x85, 0x38, 0x4a, 0xcb, 0xf5, 0xff, 0x64, 0x4f, 0xcc, 0x3b, 0x15, 0x04, 0x48, 0x90,
	0x7d, 0x9a, 0xd1, 0xf5, 0x6c, 0x29, 0x2b, 0xa3, 0x2a, 0x51, 0x87, 0x12, 0x2f, 0x21, 0xf7, 0x8f,
	0x74, 0x83, 0x6e, 0x0c, 0x6d, 0x64, 0xc0, 0x6f, 0xc3, 0xaf, 0xc3, 0x19, 0xf3, 0x46, 0xb9, 0xfc,
	0x24, 0xf7, 0x87, 0xfc, 0x25, 0x9b, 0x47, 0xbc, 0xa6, 0xb2, 0xc0, 0xfb, 0xef, 0x00, 0x00, 0x00,
	0xff, 0xff, 0xb5, 0xff, 0x49, 0xdf, 0xcf, 0x01, 0x00, 0x00,
}
